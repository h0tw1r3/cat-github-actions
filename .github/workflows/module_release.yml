# This is a generic workflow for releasing a Puppet module.
# It requires that the caller sets `secrets: inherit` to ensure
# that secrets are visible from steps in this workflow.
name: "Module Release"

on:
  workflow_call:
    inputs:
      tag:
        description: "Enter an old tag, or blank to tag HEAD of branch"
        type: string
      release:
        description: "Create a release on Github"
        type: boolean
        default: true
      publish:
        description: "Publish to forge.puppet.com"
        type: boolean
        default: true

env:
  FORGE_API_KEY: ${{ secrets.FORGE_API_KEY }}

jobs:
  check:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check Requirements"
        if: ${{ inputs.publish == true || inputs.publish == 'true' }}
        run: |
          if [[ -z "${FORGE_API_KEY}" ]] ; then
            echo "::error::missing required secret: FORGE_API_KEY"
            exit 1
          fi

  release:
    name: ${{ inputs.tag != '' && inputs.tag || 'new' }}
    needs: check
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
          clean: true
          fetch-depth: 0
          fetch-tags: true

      - name: "Checkout tag ${{ inputs.tag }}"
        if: ${{ inputs.tag != '' }}
        id: checkout
        run: |
          git checkout refs/tags/${{ inputs.tag }}
          echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT

      - name: "Get metadata version"
        id: "get_version"
        run: |
          metadata_version=$(jq --raw-output .version metadata.json)
          if [[ -n "${{ inputs.tag }}" ]] ; then
            tag=${{ steps.checkout.outputs.tag }}
            if [[ "${metadata_version}" != "${tag/v}" ]] ; then
              echo "::error::tag ${tag/v} does not match metadata version ${metadata_version}"
              exit 1
            fi
          fi
          echo "version=${metadata_version}" >> $GITHUB_OUTPUT

      - name: "PDK build ${{ steps.get_version.outputs.version }}"
        uses: "docker://puppet/pdk:3.0.0.0"
        with:
          args: "build"

      - name: "Generate release notes for Github"
        if: ${{ inputs.release == true || inputs.release == 'true' }}
        run: |
          export GH_HOST=github.com
          gh extension install chelnak/gh-changelog
          gh changelog get --latest | sed -e "1,/^\[Full Changelog\]/ d" > OUTPUT.md
          echo "::group::release notes"
          cat OUTPUT.md
          echo "::endgroup::"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Create release for v${{ steps.get_version.outputs.version }}"
        if: ${{ inputs.release == true || inputs.release == 'true' }}
        run: |
          if [[ -z "${{ inputs.tag }}" ]] ; then
            # create an annotated tag -- gh release create DOES NOT do this for us!
            # TODO move this to an automatic action when a release_prep PR is merged
            git config --local user.email "${{ github.repository_owner }}@users.noreply.github.com"
            git config --local user.name "GitHub Actions"
            git tag -a -m "v${{ steps.get_version.outputs.version }}" "v${{ steps.get_version.outputs.version }}"
            git push origin tag "v${{ steps.get_version.outputs.version }}"
          fi
          gh release create v${{ steps.get_version.outputs.version }} --title v${{ steps.get_version.outputs.version }} -F OUTPUT.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Publish module"
        if: ${{ inputs.publish == true || inputs.publish == 'true' }}
        uses: "docker://puppet/pdk:3.0.0.0"
        with:
          args: 'release publish --forge-token ${{ env.FORGE_API_KEY }} --force'
